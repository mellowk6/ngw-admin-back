<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nhbank.ngw.infra.user.mapper.UserAccountMapper">

    <resultMap id="UserAccountMap" type="com.nhbank.ngw.domain.user.model.UserAccount">
        <id     column="id"            property="id"/>
        <result column="username"      property="username"/>
        <result column="password_hash" property="passwordHash"/>
        <result column="display_name"  property="displayName"/>
        <result column="dept_code"     property="deptCode"/>
        <result column="company"       property="company"/>
        <result column="roles"         property="roles"/>
    </resultMap>

    <select id="existsByUsername" parameterType="string" resultType="boolean">
        select case when count(1) > 0 then true else false end
        from users
        where username = #{username}
    </select>

    <select id="findByUsername" parameterType="string" resultMap="UserAccountMap">
        select id, username, password_hash, display_name, dept_code, company, roles
        from users
        where username = #{username}
    </select>

    <insert id="insert" parameterType="com.nhbank.ngw.domain.user.model.UserAccount"
            useGeneratedKeys="true" keyProperty="id">
        insert into users (username, password_hash, display_name, dept_code, company, roles)
        values (#{username}, #{passwordHash}, #{displayName}, #{deptCode}, #{company}, #{roles})
    </insert>

    <update id="update" parameterType="com.nhbank.ngw.domain.user.model.UserAccount">
        update users
        set password_hash = #{passwordHash},
        display_name = #{displayName},
        dept_code = #{deptCode},
        company = #{company},
        roles = #{roles}
        where id = #{id}
    </update>

</mapper>
